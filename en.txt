The large scale software systems make more and more attacks on software and information systems. So nowadays people pay more and more attention on software security. During software development and testing, engineers often scan software codes with static code analysis systems. Only software that has passed the security testing can be deployed online. While traditional static code analysis are often conservative. In order not to miss any security risks, they often give a large number of false positives. These false positives not only increase the workload of security engineers, but also delay the progress of software development. With the development of  machine learning, researchers have applied machine learning on code analysis to discover vulnerabilities or reduce false positives. However, their works are only applicable to small-scale programs. 

This system aims to apply academic researches to the real word. For one of the  most commonly  language for Web development, Java, this system utilizes taint analysis, program slicing, and BLSTM to provide more accurate code analysis services for development or security engineers. In terms of taint analysis, the system uses a large number of rules in Find Security Bugs to ensure low false negatives. At the mean while, it can give taint propagation paths to make the report more readable. Then, the system slices each vulnerability instance. In order to ensure slicing efficiency and stability, this system optimizes the slicer for the actual Jar package and proposes an idea called ​​segmented slicing. For a taint vulnerability, its taint paths are divided into small set of taint flow fragments, then the system use backward program slicing to slice each taint flow. Finally, the system uses the BLSTM model to predict vulnerability's slicing set which have been pre-processed, and infer whether the vulnerability instance is false positive based on the slice prediction.

This system has repleced the traditional taint analysis engine online. The experimental results show that the system can obtain more accurate scanning results within an acceptable scanning time. In terms of efficiency, the system optimizes traditional slicing to ensure that the scan time of each projects does not exceed 1 hour. For accuracy,  the system's precision rate reaches 90.53\%. In other words, compared to Find Security Bugs, the system has eliminated 25.44\% false positives, which greatly reduced the code audit work.